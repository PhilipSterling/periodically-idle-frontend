{"ast":null,"code":"import _defineProperty from \"/Users/philipsterling/flatiron/Mod5/periodically-idle-frontend/periodically-idle/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst mainReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return _objectSpread({}, state, {\n        num: ++state.num\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;","map":{"version":3,"sources":["/Users/philipsterling/flatiron/Mod5/periodically-idle-frontend/periodically-idle/src/reducers/index.js"],"names":["mainReducer","state","action","type","num"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,+BAAWF,KAAX;AAAkBG,QAAAA,GAAG,EAAE,EAAEH,KAAK,CAACG;AAA/B;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPH;;AASE,eAAeD,WAAf","sourcesContent":["const mainReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'INCREMENT':\n        return {...state, num: ++state.num};\n      default:\n        return state;\n    }\n  };\n\n  export default mainReducer"]},"metadata":{},"sourceType":"module"}