{"ast":null,"code":"var _jsxFileName = \"/Users/philipsterling/flatiron/Mod5/periodically-idle-frontend/periodically-idle/src/components/atom.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport { increment } from \"../actions\";\nconst images = [{\n  url: '/static/images/grid-list/breakfast.jpg',\n  title: 'Generate Atom',\n  width: '20%'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%'\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important',\n      // Overrides inline-style\n      height: 100\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15\n      },\n      '& $imageMarked': {\n        opacity: 0\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor'\n      }\n    }\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%'\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity')\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: \"\".concat(theme.spacing(2), \"px \").concat(theme.spacing(4), \"px \").concat(theme.spacing(1) + 6, \"px\")\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity')\n  }\n}));\nexport default function ButtonBases() {\n  const classes = useStyles();\n  console.log(store.getstate());\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, images.map(image => React.createElement(ButtonBase, {\n    onClick: increment,\n    focusRipple: true,\n    key: image.title,\n    className: classes.image,\n    focusVisibleClassName: classes.focusVisible,\n    style: {\n      width: image.width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.imageSrc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.imageBackdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.imageButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"inherit\",\n    className: classes.imageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, image.title, React.createElement(\"span\", {\n    className: classes.imageMarked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/Users/philipsterling/flatiron/Mod5/periodically-idle-frontend/periodically-idle/src/components/atom.js"],"names":["React","makeStyles","ButtonBase","Typography","increment","images","url","title","width","useStyles","theme","root","display","flexWrap","minWidth","image","position","height","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","spacing","imageMarked","ButtonBases","classes","console","log","store","getstate","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport {increment} from \"../actions\";\n\nconst images = [\n  {\n    url: '/static/images/grid-list/breakfast.jpg',\n    title: 'Generate Atom',\n    width: '20%',\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%',\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important', // Overrides inline-style\n      height: 100,\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15,\n      },\n      '& $imageMarked': {\n        opacity: 0,\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor',\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity'),\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity'),\n  },\n}));\n\n\nexport default function ButtonBases() {\n  const classes = useStyles();\n  console.log(store.getstate())\n  return (\n    <div className={classes.root}>\n      {images.map(image => (\n        <ButtonBase\n          onClick={increment}\n          focusRipple\n          key={image.title}\n          className={classes.image}\n          focusVisibleClassName={classes.focusVisible}\n          style={{\n            width: image.width,\n          }}\n        >\n          <span\n            className={classes.imageSrc}\n          />\n          <span className={classes.imageBackdrop} />\n          <span className={classes.imageButton}>\n            <Typography\n              component=\"span\"\n              variant=\"subtitle1\"\n              color=\"inherit\"\n              className={classes.imageTitle}\n            >\n              {image.title}\n              <span className={classes.imageMarked} />\n            </Typography>\n          </span>\n        </ButtonBase>\n      ))}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}